syntax = "proto3";
package proto;

option go_package = "mailinglist/proto";

// this message will be encoded in binary, making it much faster than JSON
message EmailEntry {
    int64 id = 1;
    string email = 2;
    int64 confirmed_at = 3;
    bool opt_out = 4;
}

// these represent an api endpoint
message CreateEmailRequest { string email_addr = 1; }
message GetEmailRequest { string email_addr = 1; }
message UpdateEmailRequest { EmailEntry email_addr = 1; } // needs more than just the email address
message DeleteEmailRequest { string email_addr = 1; }
message GetEmailBatchRequest { 
    int32 page = 1;
    int32 count = 2;
}

// these are the responses from the server
message EmailResponse { optional EmailEntry email_entry = 1; } // won't return anything if no result from database, so "optional"
message GetEmailBatchResponse { repeated EmailEntry email_entries = 1; } // repeated: can return slice/array, etc. 

// defining the services
service MailingListService {
    rpc CreateEmail(CreateEmailRequest) returns (EmailResponse) {} //rpc CreateEmail: CreateEmailRequest sent by client, server returns EmailResponse
    rpc GetEmail(GetEmailRequest) returns (EmailResponse) {} 
    rpc UpdateEmail(UpdateEmailRequest) returns (EmailResponse) {} 
    rpc DeleteEmail(DeleteEmailRequest) returns (EmailResponse) {} 
    rpc GetEmailBatch(GetEmailBatchRequest) returns (GetEmailBatchResponse) {} 
}